/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  background: none;
  border: none; }

a {
  text-decoration: none; }

h1 {
  margin: 0; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

body {
  font-family: 'Raleway', sans-serif; }

.et-hero-tabs {
  width: 100%;
  height: 100vh;
  background: #4774e6;
  background: linear-gradient(135deg, #1f1e8a 0%, #4774e6 100%);
  color: #fff;
  text-align: center; }
  .et-hero-tabs .hero-top-title {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row nowrap;
            flex-flow: row nowrap;
    padding: 10px;
    font-size: 0.9rem; }
  .et-hero-tabs .hero-container {
    max-width: 1280px;
    margin: 0 auto; }
    .et-hero-tabs .hero-container .hero-text {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: flex-start;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-flow: row nowrap;
              flex-flow: row nowrap;
      margin: 0 auto; }
      @media (min-width: 1024px) {
        .et-hero-tabs .hero-container .hero-text {
          width: 50%;
          -webkit-box-align: center;
              -ms-flex-align: center;
                  align-items: center;
          text-align: left;
          padding-left: 40px;
          padding-right: 40px; }
          .et-hero-tabs .hero-container .hero-text p {
            padding: 0; } }
      .et-hero-tabs .hero-container .hero-text .hero-text-wrapper {
        width: 345px; }
        @media (min-width: 1024px) {
          .et-hero-tabs .hero-container .hero-text .hero-text-wrapper h2 {
            line-height: 1.2; } }
    .et-hero-tabs .hero-container .hero-pola {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-flow: row nowrap;
              flex-flow: row nowrap;
      line-height: 1.1; }
      @media (min-width: 1024px) {
        .et-hero-tabs .hero-container .hero-pola {
          -webkit-box-pack: end;
              -ms-flex-pack: end;
                  justify-content: flex-end;
          line-height: 1.2; } }
    .et-hero-tabs .hero-container .half {
      width: 100%;
      height: 45vh; }
      @media (min-width: 1024px) {
        .et-hero-tabs .hero-container .half {
          width: 50%;
          height: 100vh;
          float: left; } }
      .et-hero-tabs .hero-container .half .hero-title {
        width: 100%;
        font-size: 3.5em;
        text-transform: uppercase; }
        @media (min-width: 1024px) {
          .et-hero-tabs .hero-container .half .hero-title {
            border-right: 5px solid #fff; } }
  .et-hero-tabs h1 {
    font-weight: bolder;
    text-transform: uppercase;
    color: #ffffff;
    font-size: 2.5rem;
    margin: 0;
    letter-spacing: 0.5rem; }
  .et-hero-tabs h2 {
    line-height: 2rem;
    text-transform: capitalize;
    color: #ffffff;
    font-weight: bold;
    font-size: 1.3rem;
    letter-spacing: 0.3rem; }
  .et-hero-tabs p {
    padding-top: 1rem;
    color: #ffffff;
    font-size: 1rem; }

.et-hero-tabs-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 70px;
  z-index: 10;
  margin: 0 auto; }
  .et-hero-tabs-container--top {
    position: fixed;
    top: 0; }

.et-hero-tab {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  color: #ffffff;
  letter-spacing: 0.1rem;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
  font-size: 0.8rem; }
  .et-hero-tab:hover {
    color: black;
    background: #f7515e;
    -webkit-transition: all 0.5s ease;
    transition: all 0.5s ease; }

.et-hero-tab-slider {
  position: absolute;
  bottom: 0;
  width: 0;
  height: 6px;
  background: #ffffff;
  -webkit-transition: left 0.3s ease;
  transition: left 0.3s ease; }

@media (min-width: 750px) {
  .et-hero-tabs h1,
  .et-slide h1 {
    font-size: 3rem; }
  .et-hero-tabs h3,
  .et-slide h3 {
    font-size: 1rem; }
  .et-hero-tab {
    font-size: 1rem; } }

.line {
  position: absolute;
  display: block;
  height: 100vh;
  width: 1px;
  background: #3E3E4E;
  opacity: 0.5; }

.firstOverlayLine {
  left: 20%; }

.secondOverlayLine {
  left: 40%; }

.thirdOverlayLine {
  left: 60%; }

.fourthOverlayLine {
  left: 80%; }

.et-slide-body {
  -ms-flex-item-align: center;
      align-self: center;
  height: 106vh;
  position: relative;
  background: #22222A;
  text-align: left;
  padding: 0 2em; }

.project-1, .project-2, .project-3, .project-4 {
  color: #ffffff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  background-size: cover !important; }
  @media (min-width: 750px) {
    .project-1 h1, .project-2 h1, .project-3 h1, .project-4 h1 {
      font-size: 4rem; } }
  .project-1 input, .project-2 input, .project-3 input, .project-4 input {
    padding: 1rem 0; }
  .project-1 input, .project-1 p, .project-1 li, .project-2 input, .project-2 p, .project-2 li, .project-3 input, .project-3 p, .project-3 li, .project-4 input, .project-4 p, .project-4 li {
    color: #ffffff; }
    @media (min-width: 750px) {
      .project-1 input, .project-1 p, .project-1 li, .project-2 input, .project-2 p, .project-2 li, .project-3 input, .project-3 p, .project-3 li, .project-4 input, .project-4 p, .project-4 li {
        font-size: 1.5rem; } }

@media (min-width: 1024px) {
  .project-1 {
    display: none; } }

@media (min-width: 1024px) {
  .project-2, .project-3, .project-4 {
    display: none; } }

.desktop-project {
  display: none; }
  @media (min-width: 1024px) {
    .desktop-project {
      display: block; } }

.project-1 {
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0, 0, 0, 0.7)), to(rgba(0, 0, 0, 0.7))), url("/images/calmversation preview.png") no-repeat left;
  background: linear-gradient(rgba(0, 0, 0, 0.7) 0, rgba(0, 0, 0, 0.7)), url("/images/calmversation preview.png") no-repeat left; }

.project-2 {
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0, 0, 0, 0.7)), to(rgba(0, 0, 0, 0.7))), url("/images/instanew preview.png") no-repeat left;
  background: linear-gradient(rgba(0, 0, 0, 0.7) 0, rgba(0, 0, 0, 0.7)), url("/images/instanew preview.png") no-repeat left; }

.project-3 {
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0, 0, 0, 0.7)), to(rgba(0, 0, 0, 0.7))), url("/images/pong preview.png") no-repeat left;
  background: linear-gradient(rgba(0, 0, 0, 0.7) 0, rgba(0, 0, 0, 0.7)), url("/images/pong preview.png") no-repeat left; }

.project-4 {
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("/images/inhabitent preview.png") no-repeat left;
  background: linear-gradient(rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0.3)), url("/images/inhabitent preview.png") no-repeat left; }

.easy1 {
  padding-top: 0.5rem;
  width: 100%; }

.easy2 {
  width: 100%;
  display: none; }
  @media (min-width: 750px) {
    .easy2 {
      width: 80%; } }
  .easy2 p {
    color: #ffffff; }
  .easy2 ul {
    padding-top: 1rem;
    display: grid;
    grid-gap: 0.5rem;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr; }
  .easy2 ul li {
    color: #ffffff;
    text-decoration: none;
    list-style: none; }

.work {
  background: #ffffff;
  position: relative;
  overflow: hidden;
  height: auto;
  padding-top: 60px;
  padding-bottom: 60px; }
  .work .work-title {
    text-align: center; }
  .work .color-cn {
    color: #FA4F5B; }
  .work .mb-xxlg {
    margin-bottom: 32px !important; }
  .work .box {
    height: auto !important; }
  .work .slider-content {
    position: relative;
    z-index: 10; }
  .work .container {
    max-width: 1280px;
    margin: 0 auto; }
  .work .item {
    width: 100%;
    -webkit-transition: 0.45s ease-in-out all;
    transition: 0.45s ease-in-out all; }
    .work .item .work-right {
      text-align: right; }
    .work .item .box {
      padding: 20px;
      float: left; }
      .work .item .box .work-left {
        text-align: left; }

.about-me {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }
  .about-me h1 {
    line-height: 2.7rem;
    display: inline-grid;
    text-align: right;
    font-size: 15vw; }
    @media (min-width: 750px) {
      .about-me h1 {
        line-height: 5.3rem; } }
    @media (min-width: 1024px) {
      .about-me h1 {
        line-height: 7.2rem; } }
    .about-me h1 span {
      color: #52525f; }

.about-content-holder {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -ms-flex-flow: wrap;
      flex-flow: wrap;
  margin: 30px 0 80px; }
  .about-content-holder h3 {
    color: #5b5c70;
    margin-bottom: 20px;
    text-transform: uppercase; }
  .about-content-holder p {
    color: #ffffff;
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%; }

.grid figure figcaption, .grid figure figcaption > a {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

.grid {
  position: relative;
  margin: 0 auto;
  padding: 1em 0 4em;
  max-width: 1000px;
  list-style: none;
  text-align: center; }
  .grid figure {
    position: relative;
    float: left;
    overflow: hidden;
    margin: 10px 1%;
    min-width: 320px;
    max-width: 480px;
    max-height: 360px;
    width: 48%;
    background: #3085a3;
    text-align: center;
    cursor: pointer; }
    .grid figure img {
      position: relative;
      display: block;
      min-height: 100%;
      max-width: 100%;
      opacity: 0.8; }
    .grid figure figcaption {
      font-family: 'Roboto Mono', monospace;
      padding: 2em;
      color: #52525f;
      text-transform: uppercase;
      font-size: 1.25em;
      -webkit-backface-visibility: hidden;
              backface-visibility: hidden; }
      .grid figure figcaption > a {
        z-index: 1000;
        text-indent: 200%;
        white-space: nowrap;
        font-size: 0;
        opacity: 0; }
    .grid figure figcaption::before {
      pointer-events: none; }
    .grid figure figcaption::after {
      pointer-events: none; }
    .grid figure h2 {
      word-spacing: -0.15em;
      font-weight: 300;
      margin: 0; }
      .grid figure h2 span {
        font-weight: 800; }
    .grid figure p {
      margin: 0;
      letter-spacing: 1px;
      font-size: 68.5%; }

figure.effect-zoe figcaption {
  top: auto;
  bottom: 0;
  padding: 1em;
  height: 3.75em;
  background: #ffffff;
  color: #3c4a50;
  -webkit-transition: -webkit-transform 0.35s;
  transition: -webkit-transform 0.35s;
  transition: transform 0.35s;
  transition: transform 0.35s, -webkit-transform 0.35s;
  -webkit-transform: translate3d(0, 100%, 0);
          transform: translate3d(0, 100%, 0); }

figure.effect-zoe h2 {
  float: left;
  display: inline-block;
  -webkit-transition: -webkit-transform 0.35s;
  transition: -webkit-transform 0.35s;
  transition: transform 0.35s;
  transition: transform 0.35s, -webkit-transform 0.35s;
  -webkit-transform: translate3d(0, 200%, 0);
          transform: translate3d(0, 200%, 0); }

figure.effect-zoe p.description {
  position: absolute;
  bottom: 8em;
  padding: 1rem;
  color: #ffffff;
  text-transform: none;
  font-size: 1rem;
  opacity: 0;
  -webkit-transition: opacity 0.35s;
  transition: opacity 0.35s; }

figure.effect-zoe p.icon-links a {
  float: right;
  color: #3c4a50;
  font-size: 2rem;
  padding: 0 1rem;
  -webkit-transition: -webkit-transform 0.35s;
  transition: -webkit-transform 0.35s;
  transition: transform 0.35s;
  transition: transform 0.35s, -webkit-transform 0.35s;
  -webkit-transform: translate3d(0, 200%, 0);
          transform: translate3d(0, 200%, 0); }
  figure.effect-zoe p.icon-links a span::before {
    display: inline-block;
    padding: 8px 10px;
    font-family: feathericons;
    speak: none; }

figure.effect-zoe:hover p.description {
  opacity: 1; }

figure.effect-zoe:hover p.icon-links a {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }
  figure.effect-zoe:hover p.icon-links a:hover {
    color: #252d31; }
  figure.effect-zoe:hover p.icon-links a:focus {
    color: #252d31; }
  figure.effect-zoe:hover p.icon-links a:nth-child(3) {
    -webkit-transition-delay: 0.1s;
            transition-delay: 0.1s; }
  figure.effect-zoe:hover p.icon-links a:nth-child(2) {
    -webkit-transition-delay: 0.15s;
            transition-delay: 0.15s; }
  figure.effect-zoe:hover p.icon-links a:first-child {
    -webkit-transition-delay: 0.2s;
            transition-delay: 0.2s; }

figure.effect-zoe:hover figcaption {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

figure.effect-zoe:hover h2 {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 0.05s;
          transition-delay: 0.05s; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

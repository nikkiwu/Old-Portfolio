/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.Navbar ul {
  list-style: none;
  padding-left: 0;
  margin: 0; }

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  background: none;
  border: none; }

a {
  text-decoration: none; }

h1 {
  margin: 0; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

@media (max-width: 767px) {
  .order-reverse-col-sm {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse; } }

@media (max-width: 767px) {
  .order-reverse-row-sm {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse;
    clear: both; } }

html {
  font-size: 1.2em;
  line-height: 1.4; }

@media (min-width: 768px) {
  html {
    font-size: 1.10em;
    line-height: 1.15; } }

@media (min-width: 1200px) {
  html {
    font-size: 1.20em;
    line-height: 1.25; } }

body, h1, p {
  margin: 0; }

h1 {
  font-size: 2.197em;
  margin: 0.3591em 0;
  font-weight: normal; }

h2 {
  font-size: 1.69em;
  margin: 0.3091em 0;
  font-weight: normal; }

h3 {
  font-size: 1.3em;
  margin: 0.2591em 0;
  font-weight: normal; }

p + p {
  margin-top: 1em !important; }

.h1 {
  font-size: 2.197em;
  margin: 0.3591em 0; }

.h2 {
  font-size: 1.69em;
  margin: 0.3091em 0; }

.h3 {
  font-size: 1.3em;
  margin: 0.2591em 0; }

.h4 {
  font-size: 0.9em;
  margin: 0.2091em 0;
  font-weight: normal; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

img {
  max-width: 100%; }

.mt-none {
  margin-top: 0 !important; }

.mt-sm {
  margin-top: 4px !important; }

.mt-md {
  margin-top: 8px !important; }

.mt-lg {
  margin-top: 16px !important; }

.mt-xxlg {
  margin-top: 32px !important; }

.mb-none {
  margin-bottom: 0 !important; }

.mb-sm {
  margin-bottom: 4px !important; }

.mb-md {
  margin-bottom: 8px !important; }

.mb-lg {
  margin-bottom: 16px !important; }

.mb-xxlg {
  margin-bottom: 32px !important; }

.mr-auto {
  margin-right: auto; }

.mr-sm {
  margin-right: 4px; }

.mr-md {
  margin-right: 8px; }

.mr-lg {
  margin-right: 16px; }

.mr-xxlg {
  margin-right: 32px; }

.ml-auto {
  margin-left: auto; }

.ml-sm {
  margin-left: 4px; }

.ml-md {
  margin-left: 8px; }

.ml-lg {
  margin-left: 16px; }

.ml-xxlg {
  margin-left: 32px; }

.ms-sm {
  margin-left: 4px;
  margin-right: 4px; }

.ms-md {
  margin-left: 8px;
  margin-right: 8px; }

.ms-lg {
  margin-left: 16px;
  margin-right: 16px; }

.ms-xxlg {
  margin-left: 32px;
  margin-right: 32px; }

@media (max-width: 480px) {
  .hidden-xs-down {
    display: none !important; } }

@media (min-width: 480px) {
  .hidden-xs-up {
    display: none !important; } }

.bg-cn {
  background-color: #FA4F5B; }

.bg-blue {
  background-color: #354ECE; }

.bg-grey {
  background-color: #DFE1E4; }

.bg-wall {
  background-color: #F9F9F9; }

.color-cn {
  color: #FA4F5B; }

.box {
  float: left; }

@media (min-width: 768px) {
  .box {
    max-height: 640px; } }

.box.lg {
  width: 100vw;
  height: 100vw; }

@media (min-width: 768px) {
  .box.lg {
    width: 50%;
    height: 50vw; } }

.box.sm {
  width: 50%;
  height: 50vw; }

@media (min-width: 768px) {
  .box.sm {
    width: 25%;
    height: 25vw;
    max-height: 320px; } }

.box.md {
  width: 100vw;
  height: 40vh;
  padding: 16px; }

@media (min-width: 768px) {
  .box.md {
    width: 50%; } }

.box.long {
  width: 100vw;
  min-height: 50vh;
  padding: 16px; }

@media (min-width: 768px) {
  .box.long {
    width: 50%; } }

.box.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.box.flat {
  width: 100%;
  height: 50vh;
  min-height: 300px; }

@media (min-width: 768px) {
  .box.flat {
    width: 50%;
    height: 50vw;
    max-height: 500px; } }

.link {
  cursor: pointer;
  color: #354ECE; }

.link:hover {
  text-decoration: underline; }

.tag {
  color: white;
  border-radius: 16px;
  padding: 8px;
  font-size: 0.9em; }

.tag.tag-blue {
  background-color: #354ECE; }

.tag.tag-red {
  background-color: #FA4F5B; }

.container {
  max-width: 1440px;
  margin: 0 auto; }

.clear {
  clear: both; }

.box {
  padding: 20px; }

.box {
  padding: 20px;
  min-height: 250px; }
  @media (min-width: 1000px) {
    .box {
      min-height: 500px; } }

@media (min-width: 480px) {
  .box {
    padding: 40px !important; } }

.box {
  height: auto !important; }

@media (min-width: 768px) {
  .box {
    padding: 60px;
    padding-top: 32px; }
  .box p {
    max-width: 350px;
    line-height: 1.45; }
  .toggle {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    background-color: #354ECE;
    width: 250px;
    margin: 0 auto;
    margin-bottom: 24px;
    border-radius: 2px; }
  .toggle .slick-active button {
    color: #fff; }
  .toggle ul:first-child {
    display: none; }
  .toggle button {
    color: #A3AFEC;
    padding: 12px 16px;
    border-radius: 2px;
    font-family: "Rubik", Open Sans, Helvetica, sans-serif;
    font-weight: 500;
    text-transform: uppercase; }
  .toggle button:focus {
    color: #fff; }
  .toggle .trigger {
    position: absolute;
    pointer-events: none;
    border: 2px solid #A3AFEC;
    border-radius: 2px;
    width: 50%;
    height: 80%;
    left: 6px;
    top: 0;
    bottom: 0;
    margin: auto;
    -webkit-transition: 0.45s ease-in-out all;
    transition: 0.45s ease-in-out all; }
  .toggle .trigger.active {
    left: 121px; }
  .portfolio {
    position: relative; }
  .portfolio .box {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .portfolio .box a {
    width: 100%;
    height: 100%; }
  .portfolio .box a::before {
    content: ' ';
    display: inline-block;
    vertical-align: middle;
    height: 100%; }
  .portfolio .box a img {
    display: inline-block;
    vertical-align: middle; }
  .portfolio .port-text {
    padding: 20px; } }

@media (min-width: 768px) and (min-width: 480px) {
  .portfolio .port-text {
    padding: 40px; } }

@media (min-width: 768px) and (min-width: 480px) {
  .portfolio .port-text.lg {
    height: auto;
    padding-bottom: 56px; } }

@media (min-width: 768px) and (min-width: 768px) {
  .portfolio .port-text.lg {
    height: 50vw; } }

@media (min-width: 768px) {
  .portfolio .port-title {
    font-size: 0.7em; }
  .portfolio-white {
    background-color: #fff; }
  .portfolio-title {
    width: 100%;
    padding: 20px;
    margin: 0;
    background-color: #F9F9F9; } }

@media (min-width: 768px) and (min-width: 992px) {
  .portfolio-text-container {
    max-width: 420px; } }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  font-size: 1.4rem;
  font-family: 'Raleway', sans-serif, sans-serif;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.u-pullRight {
  float: right; }

.Toggle {
  position: relative;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  padding-top: 3rem;
  border-radius: 100%;
  background-color: transparent; }
  button.Toggle {
    border: 0;
    cursor: pointer;
    padding: 0; }
  .Toggle span {
    margin: -0.1rem auto 0;
    vertical-align: top;
    -webkit-transition-duration: 0s;
            transition-duration: 0s;
    -webkit-transition-delay: 0.2s;
            transition-delay: 0.2s;
    text-indent: 100%;
    line-height: 0;
    white-space: nowrap;
    overflow: hidden; }
    .Toggle span, .Toggle span:before, .Toggle span:after {
      display: block;
      width: 2.1rem;
      height: 0.2rem;
      background-color: #fff; }
    .Toggle span:before, .Toggle span:after {
      content: "";
      position: absolute;
      -webkit-transition-property: margin, -webkit-transform;
      transition-property: margin, -webkit-transform;
      transition-property: margin, transform;
      transition-property: margin, transform, -webkit-transform;
      -webkit-transition-duration: 0.2s;
              transition-duration: 0.2s;
      -webkit-transition-delay: 0.2s, 0s;
              transition-delay: 0.2s, 0s; }
    .Toggle span:before {
      margin-top: -0.7rem; }
    .Toggle span:after {
      margin-top: 0.7rem; }
  .Toggle:hover span:before {
    -webkit-transform: translateY(-1px);
            transform: translateY(-1px); }
  .Toggle:hover span:after {
    -webkit-transform: translateY(1px);
            transform: translateY(1px); }
  .Toggle.is-active span {
    background-color: rgba(255, 255, 255, 0);
    -webkit-transition-delay: 0.2s;
            transition-delay: 0.2s; }
    .Toggle.is-active span:before, .Toggle.is-active span:after {
      margin-top: 0;
      -webkit-transition-delay: 0s, 0.2s;
              transition-delay: 0s, 0.2s; }
    .Toggle.is-active span:before {
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg); }
    .Toggle.is-active span:after {
      -webkit-transform: rotate(-45deg);
              transform: rotate(-45deg); }

.SocialLink {
  color: inherit;
  font-size: 1rem;
  font-weight: bold;
  letter-spacing: 0.28rem;
  text-decoration: none;
  text-transform: uppercase;
  display: block;
  vertical-align: top;
  margin-left: -1px;
  padding: 1.2rem !important;
  border: 1px solid rgba(255, 255, 255, 0.06);
  background-color: #000; }

.SocialLink-icon {
  display: block;
  width: unitSize(2);
  height: unitSize(2);
  vertical-align: middle;
  fill: currentColor; }

.SocialLink-text {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap; }

body {
  min-height: 100vh;
  margin: 0 auto;
  padding: 0;
  overflow-x: hidden;
  min-width: 300px; }

.Navbar {
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  font-size: 1rem;
  font-weight: bold;
  line-height: 2.8rem;
  letter-spacing: 0.28rem;
  text-transform: uppercase;
  position: fixed;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  top: 0;
  left: 0;
  width: 100%; }
  .Navbar a:not(.Navbar-toggle) {
    color: inherit;
    text-decoration: none; }

.Navbar-brand,
.Navbar-menu a,
.Navbar-quickLinks a {
  display: block; }

.Navbar-brand,
.Navbar-quickLinks a {
  padding: 1.6rem 1.4rem; }

.Navbar-quickLinks {
  display: none; }

.Navbar-menu {
  line-height: 1.6rem;
  position: fixed;
  top: 6rem;
  left: 0;
  bottom: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  width: 0%;
  overflow-y: auto;
  visibility: hidden;
  padding: 2.4rem 0;
  background: rgba(0, 0, 0, 0.8);
  opacity: 0;
  -webkit-transition-property: opacity, visibility, width;
  transition-property: opacity, visibility, width;
  -webkit-transition-duration: 0.35s, 0.25s, 0.25s;
          transition-duration: 0.35s, 0.25s, 0.25s;
  -webkit-transition-delay: 0.1s;
          transition-delay: 0.1s; }
  .Navbar-menu .Navbar-menu-major {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }
  .Navbar-menu.is-active {
    opacity: 1;
    visibility: visible;
    width: 100%;
    -webkit-transition-duration: 0.15s, 0.25s, 0.25s;
            transition-duration: 0.15s, 0.25s, 0.25s; }

.Navbar-menu-major a,
.Navbar-menu-minor a,
.Navbar-menu-minor .Navbar-menu-social {
  padding: 1.6rem 14%; }

.Navbar-menu-major {
  font-size: 1.4rem; }
  .Navbar-menu-major a:hover {
    background-color: rgba(255, 255, 255, 0.06); }

.Navbar-menu-minor {
  color: #666666;
  margin-top: 1.4rem; }
  .Navbar-menu-minor a {
    padding-top: 0.7rem;
    padding-bottom: 0.7rem; }
    .Navbar-menu-minor a:hover {
      color: #fff; }

.Navbar-menu-social {
  overflow: hidden; }
  .Navbar-menu-social li {
    float: left; }

@media (min-width: 544px) {
  .u-Navbar-hidden\@sm-up {
    display: none; }
  body {
    padding-top: 0;
    padding-left: 6rem; }
  .Navbar {
    bottom: 0;
    width: 6rem; }
  .Navbar-toggle {
    position: absolute;
    top: 0; }
  .Navbar-menu {
    top: 0;
    left: 6rem;
    padding-top: 5.2rem; }
    .Navbar-menu.is-active {
      width: 26rem; }
  .Navbar-brand {
    position: absolute;
    top: 6rem;
    right: 0;
    padding-left: 0.6rem !important;
    padding-right: 0.6rem !important;
    -webkit-transform: rotate(-90deg) translateY(-6rem);
            transform: rotate(-90deg) translateY(-6rem);
    -webkit-transform-origin: right top;
            transform-origin: right top; }
  .Navbar-quickLinks {
    white-space: nowrap;
    position: absolute;
    bottom: 0;
    display: block;
    padding-left: 1.6rem !important;
    -webkit-transform: rotate(-90deg) translateX(-6rem);
            transform: rotate(-90deg) translateX(-6rem);
    -webkit-transform-origin: 0 0;
            transform-origin: 0 0; }
    .Navbar-quickLinks li {
      display: inline-block; } }

.hero-top-title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  padding: 10px;
  font-size: 0.9rem; }

.hero-container {
  height: 100vh;
  background: #4774e6;
  background: linear-gradient(135deg, #1f1e8a 0%, #4774e6 100%);
  text-align: center;
  max-width: 1440px;
  margin: 0 auto; }
  .hero-container .hero-text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row nowrap;
            flex-flow: row nowrap;
    margin: 0 auto; }
    @media (min-width: 1024px) {
      .hero-container .hero-text {
        width: 50%;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        text-align: left;
        padding-left: 40px;
        padding-right: 40px; } }
    .hero-container .hero-text .hero-text-wrapper {
      width: 345px; }
      @media (min-width: 1024px) {
        .hero-container .hero-text .hero-text-wrapper {
          width: 100%; } }
      @media (min-width: 1024px) {
        .hero-container .hero-text .hero-text-wrapper h2 {
          line-height: 1.2; } }
  .hero-container .hero-pola {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row nowrap;
            flex-flow: row nowrap;
    line-height: 1.1; }
    @media (min-width: 1024px) {
      .hero-container .hero-pola {
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        line-height: 1.2; } }
  .hero-container .half {
    width: 100%;
    height: 50vh; }
    @media (min-width: 1024px) {
      .hero-container .half {
        width: 50%;
        height: 100vh;
        float: left; } }
    .hero-container .half .hero-title {
      width: 100%;
      font-size: 10rem;
      text-transform: uppercase; }
      @media (min-width: 1024px) {
        .hero-container .half .hero-title {
          border-right: 5px solid #fff;
          font-size: 10rem; } }
  .hero-container h1 {
    font-weight: bolder;
    text-transform: uppercase;
    color: #fff;
    font-size: 2.5rem;
    margin: 0;
    letter-spacing: 0.5rem; }
  .hero-container h2, .hero-container h3 {
    line-height: 2rem;
    text-transform: capitalize;
    color: #fff;
    font-weight: bold;
    font-size: 2.9rem;
    letter-spacing: 0.3rem; }
    @media (min-width: 1024px) {
      .hero-container h2, .hero-container h3 {
        font-size: 2.9rem; } }
  .hero-container p {
    color: #fff;
    padding: 5px 10px;
    font-size: 1.5rem; }
    @media (min-width: 1024px) {
      .hero-container p {
        padding-top: 10px; } }

.about-me {
  height: 100vh;
  background: #D1D2D4; }
  .about-me h2 {
    font-size: 4rem;
    color: #EF5464; }
  .about-me p {
    text-align: right;
    color: #37383A; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
